html(style='width: 100%;')
  head
    title
    meta(name='description' content='')
    meta(name='keywords' content='매니스탈링스')
    meta(property="og:type" content="website")
    meta(property="og:site_name" content="MST")
    meta(property="og:title" content="차가운 기술로 따뜻한 세상을 만드는 🙂🙂 | AI 비전솔루션 매니스탈링스 Many Stallings Company")
    meta(property="og:description" content="AI Vision Solution")
    meta(property="og:image" content="http://plusuniv.com/img/og_img.png")
    meta(property='og:image:alt', content='Many Stallings Company Logo')
    meta(property="og:url" content="http://plusuniv.com")

    script(type="text/javascript" src="/js/vue.js")
    script(type="text/javascript" src="/js/grunt-build.js")
    script(type="text/javascript" src="/js/clipboard.js")
    script(type="text/javascript" src="/js/toastui-chart.js" async)
    script(type="text/javascript" src="/js/lodash.js")
    script(type="text/javascript" src="/js/dayjs.js")
    script(type="text/javascript" src="/js/dayjs-issameorbefore.js")
    script(type="text/javascript" src="/js/dayjs-customformat.js")
    //script(type="text/javascript" src="/js/init.js")
    script(type="text/javascript" src="/js/axios.js" async)
    script(type="text/javascript" src="/js/http.js")

    link(rel='stylesheet' href='/css/buefy.css')
    link(rel='stylesheet' href='/css/toastui-chart.min.css' async)
    link(rel="stylesheet" href='/css/admin.css')

    //link(href='https://vjs.zencdn.net/7.19.2/video-js.css', rel='stylesheet')

    link(rel='canonical' href='http://plusuniv.com')
    meta(name="viewport" content="width=device-width, initial-scale=1.0")

    link(rel='apple-touch-icon' href='/apple-touch-icon.png')
    //link(rel="icon" href="https://plusuniv.com/favicon.ico" type="image/x-icon")
    //link(rel='icon', href='https://plusuniv.com/favicon.svg' type="image/svg+xml")
  body
    #app
      main
        tnb-admin
        lnb(menu-name="어드민/페이지뷰")
        .main-inner
          .data-control
            .label 기간
            button(:class="{selected: selectedFilter2 == '1달'}" @click="filter2({label: '1달'});drawChart()") 1달
            button(:class="{selected: selectedFilter2 == '1년'}" @click="filter2({label: '1년'});drawChart()") 1년
            button(:class="{selected: selectedFilter1 == '일별'}" @click="filter2({label: '일별'});drawChart()") 일별
            button(:class="{selected: selectedFilter1 == '주별'}" @click="filter2({label: '주별'});drawChart()") 주별
            button(:class="{selected: selectedFilter1 == '월별'}" @click="filter2({label: '월별'});drawChart()") 월별
            .no-button
          .data-control
            .datetime-label
              .start
                .label 시작 날짜
                .value {{ !!startDate ? startDate.format('YYYY.MM.DD') : 'N/A' }}
              .end
                .label 종료 날짜
                .value {{ !!endDate ? endDate.subtract(1, 'd').format('YYYY.MM.DD') : 'N/A' }}
          .data-items(v-if="selectedFilter2 == ''")
            .data-item(v-for="row of Object.values(select)")
              .item(v-if="!!row.name")
                a(:href="row.url") {{ row.name }}
              .item(v-else) {{row.url}}
              .item {{ row.count }} 회
          section.chart-section(v-else)
            b-tabs(@input="drawChart" :multiline="true")
              b-tab-item(:label="row.name" :value="row.name" v-if="!!row.name && !row.name.startsWith('/')" v-for="row of Object.values(select)")
                h2
                  span 페이지
                  span {{row.name}}
          .chart-1
    include common/tnb-admin.pug
    include common/lnb.pug
 
  script(type="text/javascript" src="/js/components.js")
  script(type='text/javascript').
    dayjs.extend(dayjs_plugin_customParseFormat)
    dayjs.extend(dayjs_plugin_isSameOrBefore)

    let pageViewBulky = JSON.parse(_.unescape("#{pageViewBulky}").replace(/\\/g, '%5C'))
    function mapToList(map) {
      const list = []
      for(let [key, value] of Object.entries(map))
        list.push({ key: key, ...value })
    }
    var v = new Vue({
      el: '#app',
      components: {
      },
      data: {
        raw: pageViewBulky,
        select: {},
        urlMap: {
          '/': '메인 페이지',
          '/research': '연구',
          '/HR': '(HR) 인재 채용',
          '/HR1': 'HR 프로세스',
          '/HRh': 'HR 해시코드 생성 페이지',
          '/HR2': 'HR 해시코드 입력 페이지',
          '/HR3': '채용 후',
          '/license': '프론트엔드 License',
          '/terms/wordnote': 'Wordnote App Terms',
          '/terms/wordnote2': 'Wordnote App Terms',
          '/%EC%96%B4%EB%93%9C%EB%AF%BC/%EB%A9%94%EC%9D%B8': '어드민 메인',
          '/%EC%96%B4%EB%93%9C%EB%AF%BC/%ED%8A%B8%EB%9E%98%ED%94%BD': '어드민 페이지뷰',
          '/%EC%96%B4%EB%93%9C%EB%AF%BC/SEO%EC%84%A4%EC%A0%95': '어드민 SEO 설정',
          '/%EC%96%B4%EB%93%9C%EB%AF%BC/%EB%B3%B4%EC%95%88%EC%84%A4%EC%A0%95': '어드민 보안 설정'
        },
        startDate: null,
        endDate: null,
        pageName: '',
        selectedFilter: '',
        selectedFilter1: '일별',
        selectedFilter2: '',
        chartObject: null
      },
      methods: {
        filter: function ({ label, startDate, endDate }) {
          this.selectedFilter = label
          this.selectedFilter2 = ''
          if(label == '오늘')
          {
            this.startDate = dayjs().set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
            this.endDate = dayjs().add(1, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
          }
          else if(label == '어제')
          {
            this.startDate = dayjs().subtract(1, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
            this.endDate = dayjs().set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
          }
          else if(label == '1주전')
          {
            this.startDate = dayjs().subtract(6, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
            this.endDate = dayjs().add(1, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
          }
          else if(label == '1달전')
          {
            this.startDate = dayjs().subtract(31, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
            this.endDate = dayjs().add(1, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
          }

          this.select = {}
          for(let dateObject = this.startDate; dateObject.isBefore(this.endDate); dateObject = dateObject.add(1, 'd'))
          {
            Object.keys(this.raw).filter(key => key.startsWith(dateObject.format('YYYY.MM.DD'))).forEach(key => {
              let datetime = key.split('|')[0]
              let url = key.split('|')[1]
              let count = this.raw[key]
              if(!this.select['@URL=' + url]) this.select['@URL=' + url] = {name: this.urlMap[url], url: url, count: 0}
              this.select['@URL=' + url].count += count
            })
          }
        },
        filter2: function ({ label, startDate, endDate }) {
          if(label == '일별' || label == '주별' || label == '월별')
            this.selectedFilter1 = label
          else
            this.selectedFilter2 = label
          this.selectedFilter = ''
          if(label == '1주')
          {
            this.startDate = dayjs().subtract(7, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
            this.endDate = dayjs().set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
          }
          else if(label == '1달')
          {
            this.startDate = dayjs().subtract(1, 'M').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
            this.endDate = dayjs().add(1, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
          }
          else if(label == '1년')
          {
            this.startDate = dayjs().subtract(1, 'y').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
            this.endDate = dayjs().add(1, 'd').set('h', 0).set('m', 0).set('s', 0).set('ms', 0)
          }
          else
            return
          this.select = {}

          Object.keys(this.urlMap).forEach(url => {
            this.select['@ELEMENT=' + url] = {name: this.urlMap[url], url: url}
          })
        },
        drawChart: function(pageName) {
          if(!!pageName)
            this.pageName = pageName
          if(!this.pageName) return
          let selectLabel = '@NAME=' + this.pageName
          if(!!this.startDate && !!this.endDate)
          {
            if(typeof this.select != 'object')
              this.select = {}
            this.select[selectLabel] = []

            const el = document.querySelector('.chart-1')
            const data = {
              categories: [],
              series: [
                {
                  name: '페이지뷰 수',
                  data: []
                }
              ]
            }
            let chartWidth = 1280
            if(window.innerWidth > 2560)
              chartWidth = 2560 - 500
            else if(window.innerWidth > 1920)
              chartWidth = 1920 - 500
            else if(window.innerWidth > 1600)
              chartWidth = 1600 - 500
            const options = {
              chart: { title: '페이지뷰 수 통계', width: chartWidth, height: 300 },
              xAxis: { pointOnColumn: false, title: { text: '날짜' } },
              yAxis: { title: '페이지뷰 수' },
              exportMenu: {
                visble: false
              }
            }
            if(!this.chartObject)
            {
              this.chartObject = toastui.Chart.columnChart({ el: el, data: data, options })
            }
            else
            {
              this.chartObject.destroy()
              this.chartObject = toastui.Chart.columnChart({ el: el, data: data, options })
            }
            let startIndex = 0, endIndex = 0
            for(let bulkname of Object.keys(this.raw))
            {
              this.raw[bulkname].forEach(key => {
                let keySplit = key.split('|')
                
                let datetime = keySplit[0]
                let url = keySplit[1]
                let count = Number(keySplit[2])
                if(this.pageName != this.urlMap[url]) return
                let dateObject = dayjs(datetime)
                if(!(this.startDate.isBefore(dateObject) && dateObject.isBefore(this.endDate))) return
                if(this.selectedFilter1 == '월별')
                {
                  if(this.select[selectLabel].length == 0 || dateObject.month() != dateObject.subtract(1, 'd').month())
                    this.select[selectLabel].push({name: this.urlMap[url], url: url, datetime: dateObject, count: count})
                  else 
                  {
                    let element = this.select[selectLabel].pop()
                    element.count += count
                    this.select[selectLabel].push(element)
                  }
                }
                else if(this.selectedFilter1 == '주별')
                {
                  if(this.select[selectLabel].length == 0 || dateObject.day() == 1)
                    this.select[selectLabel].push({name: this.urlMap[url], url: url, datetime: dateObject, count: count})
                  else 
                  {
                    let element = this.select[selectLabel].pop()
                    element.count += count
                    this.select[selectLabel].push(element)
                  }
                }
                else if(this.selectedFilter1 == '일별')
                {
                  this.select[selectLabel].push({name: this.urlMap[url], url: url, datetime: dateObject, count: count})
                }
              })
            }
            this.select[selectLabel].forEach((v, i) => {
              setTimeout(() => {
                let category = v.datetime.format('YYYY-MM-DD')              
                this.chartObject.addData([v.count], category)
              }, 20 * i)
            })
            if(!this.select[selectLabel]) return
          }
        }
      },
      computed: {
      },
      created()
      {
      },
      mounted()
      {
      },
      beforeDestroy()
      {
      }

    })